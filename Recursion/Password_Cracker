#include <bits/stdc++.h>
using namespace std;

void backtrack(vector<string>& pass, string login, vector<string>& comb, unordered_set<string>& failed,bool& f) {
    if (failed.count(login) != 0 or f)
        return;
    if (login == ""){
        f=true;
        string res;
        for (auto c: comb){
          res=res+c+" ";
        }
        res.erase(res.size()-1,res.size());
        cout<<res<<endl;
        return;
    }
    
   
    for (auto p : pass) {
        if (login.length() >= p.length() && login.substr(0, p.length()) == p) {
            comb.push_back(p);
            backtrack(pass, login.substr(p.length()), comb, failed,f);
            comb.pop_back();
        }
    }
    
    failed.insert(login);
}

int main() {
    int t;
    
    cin >> t;
    for (int i = 0; i < t; i++) {
        bool f=false;
        int n;
        cin >> n;
        vector<string> pass = {};
        for (int j = 0; j < n; j++) {
            string str;
            cin >> str;
            pass.push_back(str);
        }
        string login;
        cin >> login;
        string res;
        vector<string> comb;
        unordered_set<string> failed;
        backtrack(pass, login, comb, failed,f);
        if (f==false){
            cout << "WRONG PASSWORD" << endl;
    }
    }
    return 0;
}
